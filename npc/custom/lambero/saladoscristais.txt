//===== Cronus Script ========================================
//= Sala dos Cristais
//===== Por: =================================================
//= Mara [matheus.macabu@hotmail.com]
//===== Versão Atual: ========================================
//= 1.2
//===== Compatível Com: ======================================
//= Cronus/eAthena
//===== Descrição: ===========================================
//= Um evento onde você entra em uma sala com o objetivo de
//= conseguir bandeiras nacionais, só que nela podem ter
//= armadilhas com as seguintes conseqüências:
//=
//= - 50% de chance de ser retirado da sala.
//= - 10% de chance de ser expulso e voltar só na próxima ro-
//= dada.
//= - 6% de chance de ser mandado para um sala com 10
//= cristais;
//= - 6% de chance de ganhar 2 Bandeiras Nacionais;
//= - 10% de chance de ganhar 1 Bandeira Nacional;
//= - 10% de chance de aumentar sua agilidade;
//= - 3% de chance de perder 1 Bandeira Nacional.
//=
//= Para alterar a chance de drop da Bandeira Nacional
//= altere a seguinte linha no código do Cristal:
//= 7500 --> chance;
//=
//= 100 = 1%
//= 1000 = 10%
//= 10000 = 100%
//===== Comentários Adicionais: ==============================
//= 1.0 - Script criado. [Mara]
//= 1.1 - Corrigido pequeno BUG. [Mara]
//= 1.2 - Adicionado PvP nos mapas. [Mara]
//= 1.3 - Corrigido alguns erros nos monstros. [Mara]
//= 1.4 - Alterada forma de drop da Bandeira Nacional. [Mara]
//= 1.5 - Modificado ID do MOB (1954). [Mara]
//= 1.6 - Horário modificado: de 2 em 2h. [Mara]
//============================================================
 
prontera,157,185,5	script	Sala dos Cristais	988,{
 
set .n$, "[^CD3333Sala dos Cristais^000000]";
set $msu, 10; // Máximo de Player na Sala 1.
set $msd, 10; // Máximo de Players na Sala 2.
set $mnu, 10; // Cristais na Sala 1.
set $mnd, 10; // Cristais na Sala 2.
 
        dispbottom "Script por Mara.";
        if($scg == false){
        mes .n$;
        mes "A sala dos cristais está fechada no momento.";
        close;
        }
        mes .n$;
        mes "Olá ^0000CD"+strcharinfo(0)+"^000000 !";
        mes "Escolha a sala que você deseja entrar:";
        mes "Sala 1: [^FF0000"+getmapusers("hunter_1-1.gat")+"^000000/^008B00"+$msu+"^000000]";
        mes "Sala 2: [^FF0000"+getmapusers("hunter_2-1.gat")+"^000000/^008B00"+$msd+"^000000]";
 
        switch(select("- Sala 1","- Sala 2","- Cancelar")){
 
        case 1:
                if(getgmlevel() > 0) callsub OnEnteru;
                if(getmapusers("hunter_1-1.gat") == $msu){
                next;
                mes .n$;
                mes "Desculpe, mas a sala está lotada, tente novamente mais tarde.";
                close;
                }
                callsub OnEnteru;
 
                OnEnteru:
                        if((#trap == true) && (#sct == $sct)){
                        next;
                        mes .n$;
                        mes "Você caiu em uma armadilha de expulsão, volte na próxima rodada.";
                        close;
                        }
                        close2;
                        warp "hunter_1-1.gat", 0, 0;
                        end;
 
        case 2:
                if(getgmlevel() > 0) callsub OnEnterd;
                if(getmapusers("hunter_2-1.gat") == $msu){
                next;
                mes .n$;
                mes "Desculpe, mas a sala está lotada, tente novamente mais tarde.";
                close;
                }
                callsub OnEnterd;
 
                OnEnterd:
                        if((#trap == true) && (#sct == $sct)){
                        next;
                        mes .n$;
                        mes "Você caiu em uma armadilha de expulsão, volte na próxima rodada.";
                        close;
                        }
                        close2;
                        warp "hunter_2-1.gat", 0, 0;
                        end;
 
        case 3:
                close;
}
 
OnClock0000: callsub OnOpenRoom;
OnClock0010: callsub OnClosRoom; 

OnClock0200: callsub OnOpenRoom;
OnClock0210: callsub OnClosRoom; 

OnClock0400: callsub OnOpenRoom; 
OnClock0410: callsub OnClosRoom;

OnClock0600: callsub OnOpenRoom; 
OnClock0610: callsub OnClosRoom; 

OnClock0800: callsub OnOpenRoom;
OnClock0810: callsub OnClosRoom; 

OnClock1000: callsub OnOpenRoom; 
OnClock1010: callsub OnClosRoom;

OnClock1200: callsub OnOpenRoom; 
OnClock1210: callsub OnClosRoom; 

OnClock1400: callsub OnOpenRoom;
OnClock1410: callsub OnClosRoom;

OnClock1600: callsub OnOpenRoom;
OnClock1610: callsub OnClosRoom;

OnClock1800: callsub OnOpenRoom;
OnClock1810: callsub OnClosRoom;

OnClock2000: callsub OnOpenRoom;
OnClock2010: callsub OnClosRoom;

OnClock2200: callsub OnOpenRoom;
OnClock2210: callsub OnClosRoom;
 
 
OnOpenRoom:
        set $scg,1;
        announce "O portão para a Sala dos Cristais está aberto !",bc_yellow;
        monster "knight_1-1.gat",98,100,"Cristal LambeRO",1396,10,"OKC::OnCSE";
        monster "bif_fild01.gat",0,0,"Cristal LambeRO",1877,$mnu,"OKC::OnCSE";
        monster "bif_fild01.gat",0,0,"Cristal LambeRO",1877,$mnd,"OKC::OnCSE";
        end;
 
OnClosRoom:
        set $scg,0;
        announce "O portão para a Sala dos Cristais foi fechado !",bc_yellow|bc_all;
        set $sct, $sct + 1;
        end;
}
 
-	script	OKC	-1,{OnCSE: end;}
 
function	script	Kill_Monster	{
 
OnClock0010: atcommand "@killmonster2"; end;
OnClock0210: atcommand "@killmonster2"; end;
OnClock0410: atcommand "@killmonster2"; end;
OnClock0610: atcommand "@killmonster2"; end;
OnClock0810: atcommand "@killmonster2"; end;
OnClock1010: atcommand "@killmonster2"; end;
OnClock1210: atcommand "@killmonster2"; end;
OnClock1410: atcommand "@killmonster2"; end;
OnClock1610: atcommand "@killmonster2"; end;
OnClock1810: atcommand "@killmonster2"; end;
OnClock2010: atcommand "@killmonster2"; end;
OnClock2210: atcommand "@killmonster2"; end;
}
 
hunter_1-1.gat,0,0,0	script	Timer#1	-1,{callfunc "Kill_Monster";}
hunter_2-1.gat,0,0,0	script	Timer#2	-1,{callfunc "Kill_Monster";}
knight_1-1.gat,0,0,0	script	Timer#3	-1,{callfunc "Kill_Monster";}
 
hunter_1-1.gat,0,0,0	script	Armadilha#1	-1,3,3,{OnInit: callfunc "TrapAct","Armadilha#1"; OnTouch: callfunc "ADisp";}
hunter_1-1.gat,0,0,0	script	Armadilha#2	-1,3,3,{OnInit: callfunc "TrapAct","Armadilha#2"; OnTouch: callfunc "ADisp";}
hunter_1-1.gat,0,0,0	script	Armadilha#3	-1,3,3,{OnInit: callfunc "TrapAct","Armadilha#3"; OnTouch: callfunc "ADisp";}
hunter_1-1.gat,0,0,0	script	Armadilha#4	-1,3,3,{OnInit: callfunc "TrapAct","Armadilha#4"; OnTouch: callfunc "ADisp";}
hunter_1-1.gat,0,0,0	script	Armadilha#5	-1,3,3,{OnInit: callfunc "TrapAct","Armadilha#5"; OnTouch: callfunc "ADisp";}
 
hunter_2-1.gat,0,0,0	script	Armadilha#6	-1,3,3,{OnInit: callfunc "TrapAct","Armadilha#6"; OnTouch: callfunc "ADisp";}
hunter_2-1.gat,0,0,0	script	Armadilha#7	-1,3,3,{OnInit: callfunc "TrapAct","Armadilha#7"; OnTouch: callfunc "ADisp";}
hunter_2-1.gat,0,0,0	script	Armadilha#8	-1,3,3,{OnInit: callfunc "TrapAct","Armadilha#8"; OnTouch: callfunc "ADisp";}
hunter_2-1.gat,0,0,0	script	Armadilha#9	-1,3,3,{OnInit: callfunc "TrapAct","Armadilha#9"; OnTouch: callfunc "ADisp";}
hunter_2-1.gat,0,0,0	script	Armadilha#0	-1,3,3,{OnInit: callfunc "TrapAct","Armadilha#0"; OnTouch: callfunc "ADisp";}
 
function	script	TrapAct	{
 
movenpc getarg(0),rand(140,60),rand(60,140);
end;
}
 
 
function	script	ADisp	{
 
set @rand, rand(1,100);
if(@rand <= 50){
specialeffect2 69;
announce "Você caiu em uma armadilha...você será retirado da sala.",bc_yellow|bc_self;
warp getsavepoint(0),getsavepoint(1),getsavepoint(2); end;
}
set @rane, rand(1,100);
if(@rane <= 10){
specialeffect2 69;
announce "Você caiu em uma armadilha...você será retirado da sala por esta rodada.",bc_yellow|bc_self;
warp getsavepoint(0),getsavepoint(1),getsavepoint(2); set #trap, 1; set #sct, $sct; end;
}
set @raed, rand(1,100);
if(@raed <= 6){
specialeffect2 100;
announce "Você caiu em uma armadilha...e recebeu 2 Bandeiras Nacionais !!",bc_yellow|bc_self;
getitem 7549,2; end;
}
set @rend, rand(1,100);
if(@rend <= 10){
specialeffect2 100;
announce "Você caiu em uma armadilha...e recebeu 1 Bandeira Nacional !!",bc_yellow|bc_self;
getitem 7549,1; end;
}
set @eand, rand(1,100);
if(@eand <= 10){
specialeffect2 100;
announce "Você caiu em uma armadilha...e recebeu Aumentar Agilidade Nv.10 !!",bc_yellow|bc_self;
sc_start 32,240000,10; skilleffect 29,0; end;
}
set @ranf, rand(1,100);
if(@ranf <= 3){
if(countitem($cid) == false){
specialeffect2 69;
announce "Você caiu em uma armadilha...você será retirado da sala.",bc_yellow|bc_self;
warp getsavepoint(0),getsavepoint(1),getsavepoint(2); end;
}
specialeffect2 62;
announce "Você caiu em uma armadilha...e perdeu 1 Bandeira Nacional.",bc_yellow|bc_self;
delitem 7549, 1; end;
}
set @rafd, rand(1,100);
if(@rafd <= 6){
specialeffect2 100;
announce "Você caiu em uma armadilha...e será teleportado para uma sala...",bc_yellow|bc_self;
warp "knight_1-1.gat",0,0; end;
}
}

knight_1-1.gat,0,0,0,0	monster	Cristal LambeRO	1877,10,20000,30000,0
bif_fild01.gat,0,0,0,0	monster	Cristal LambeRO	1877,30,20000,30000,0
bif_fild01.gat,0,0,0,0	monster	Cristal LambeRO	1877,30,20000,30000,0
 
knight_1-1.gat	mapflag	nobranch
bif_fild01.gat	mapflag	nobranch

knight_1-1.gat	mapflag	noicewall
bif_fild01.gat	mapflag	noicewall

knight_1-1.gat	mapflag	nomemo
bif_fild01.gat	mapflag	nomemo

knight_1-1.gat	mapflag	nosave
bif_fild01.gat	mapflag	nosave

knight_1-1.gat	mapflag	noteleport
bif_fild01.gat	mapflag	noteleport

knight_1-1.gat	mapflag	nowarp
bif_fild01.gat	mapflag	nowarp

knight_1-1.gat	mapflag	pvp
bif_fild01.gat	mapflag	pvp
